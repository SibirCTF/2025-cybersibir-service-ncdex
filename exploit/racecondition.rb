require 'net/http'
require 'uri'
require 'securerandom'

BASE_URL = 'http://localhost:7331'

def register_user
  username = "user_#{SecureRandom.hex(8)}"
  email = "user_#{SecureRandom.hex(8)}@gmail.com"
  password = SecureRandom.hex(12)

  uri = URI("#{BASE_URL}/users/register")
  req = Net::HTTP::Post.new(uri)
  req.set_form_data(
    {
      'username' => username,
      'email' => email,
      'password' => password
    }
  )

  res = Net::HTTP.start(uri.hostname, uri.port) { |http| http.request(req) }
  raise '[✗] Ошибка регистрации' unless res.code.to_i == 302

  puts "[✓] Зарегистрирован: #{email}"
  { username: username, email: email, cookies: res['Set-Cookie'] }
end

def pick_exploit_type
  %w[
    rce sqli xss lfi rfi xxe idor ssti buffer_overflow
    heap_overflow format_string command_injection privilege_escalation
    auth_bypass logic_bug crypto_attack side_channel hardware_exploit
    iot_exploit smart_contract deepfake_hack
  ].sample
end

def pick_platform
  %w[
    windows linux macos android ios web
    cloud scada iot blockchain hypervisor
    network firmware game drone automotive
  ].sample
end

def generate_title
  "Exploit #{SecureRandom.hex(20)}"
end

def generate_description
  "Proof of concept for vulnerability #{SecureRandom.uuid}."
end

def create_vulnerability(session)
  title = generate_title
  description = generate_description
  exploit_code = "exploit(); #{SecureRandom.hex(18)}"
  exploit_type = pick_exploit_type
  platform = pick_platform
  price = rand(10..100) * 10

  uri = URI("#{BASE_URL}/vulnerabilities")
  req = Net::HTTP::Post.new(uri)
  req['Cookie'] = session[:cookies]
  req.set_form_data(
    {
      'title' => title,
      'description' => description,
      'exploit' => exploit_code,
      'exploit_type' => exploit_type,
      'platform' => platform,
      'price' => price
    }
  )

  res = Net::HTTP.start(uri.hostname, uri.port) { |http| http.request(req) }

  raise '[✗] Ошибка создания уязвимости' unless res.code.to_i == 302 && res['location'] =~ %r{/vulnerabilities/(\d+)}

  vuln_id = Regexp.last_match(1).to_i
  puts "[✓] Уязвимость создана: ID #{vuln_id} (#{exploit_type} / #{platform} — #{price})"
  vuln_id
end

def buy_vulnerability(session, vuln_id)
  uri = URI("#{BASE_URL}/vulnerabilities/#{vuln_id}/buy")
  req = Net::HTTP::Post.new(uri)
  req['Cookie'] = session[:cookies]

  res = Net::HTTP.start(uri.hostname, uri.port) { |http| http.request(req) }

  if res.code.to_i == 302
    puts "[✓] Самопокупка прошла успешно: #{vuln_id}"
  else
    puts "[✗] Ошибка покупки уязвимости #{vuln_id}: #{res.code}"
  end
end

# --- Основной запуск ---

session = register_user
vuln_id = create_vulnerability(session)
buy_vulnerability(session, vuln_id)
